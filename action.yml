name: 'actions-template-sync'
description: 'Synchronises changes of the template repository'
author: 'AndreasAugustin'
branding:
  icon: cloud
  color: green
inputs:
  github_token:
    description: 'Token for the repo. Can be passed in using $\{{ secrets.GITHUB_TOKEN }}'
    # TODO(anau)
    # required: true
  source_repo_path:
    description: 'Repository path of the template'
    required: true
  upstream_branch:
    description: 'The target branch'
    required: true
    default: 'main'
  source_repo_ssh_private_key:
    description: '[optional] private ssh key for the source repository. E.q. useful if using a private template repository.'
  # TODO(anau)
  source_repo_github_token:
     description: '[optional] Separate github token to interact with the source repository. Using $\{{ inputs.github_token }} by default.'
  pr_branch_name_prefix:
    description: '[optional] the prefix of branches created by this action'
    default: 'chore/template_sync'
  pr_title:
    description: '[optional] the title of PRs opened by this action'
    default: 'upstream merge template repository'
  pr_labels:
    description: '[optional] comma separated list of pull request labels'
  pr_commit_msg:
    description: '[optional] the commit message of the template merge'
    default: 'chore(template): merge template changes :up:'
  hostname:
    description: '[optional] the hostname of the GitHub repository'
    default: 'github.com'
  is_dry_run:
    description: '[optional] set to true if you do not want to push the changes and not want to create a PR'
runs:
  using: 'docker'
  image: 'src/Dockerfile'
  env:
    GITHUB_TOKEN: ${{ inputs.github_token }}
    SOURCE_REPO_GITHUB_TOKEN: ${{ inputs.source_repo_github_token }}
    SOURCE_REPO_PATH: ${{ inputs.source_repo_path }}
    UPSTREAM_BRANCH: ${{ inputs.upstream_branch }}
    SSH_PRIVATE_KEY_SRC: ${{ inputs.source_repo_ssh_private_key }}
    PR_BRANCH_NAME_PREFIX: ${{ inputs.pr_branch_name_prefix }}
    PR_TITLE: ${{ inputs.pr_title }}
    PR_LABELS: ${{ inputs.pr_labels }}
    PR_COMMIT_MSG: ${{ inputs.pr_commit_msg }}
    HOSTNAME: ${{ inputs.hostname }}
    IS_DRY_RUN: ${{ inputs.is_dry_run }}
